{"version":3,"sources":["AudioAnnotation/styles.js","AudioAnnotation/AudioSpectrum.js","Api/axiosInstance.js","App.js","reportWebVitals.js","index.js"],"names":["WaveformContianer","styled","div","AudioContainer","Wave","Timeline","PlayButton","button","AudioSpectrum","state","playing","zoom","cursorTime","url","props","spectogram","table","filedata","index","serial","regions","responseMessage","start","end","label","duration","handlePlayPause","setState","waveform","playPause","addRegion","data","color","randomColor","removeAll","clearRegions","downloadFile","a","regionsList","Object","values","list","map","region","json","push","fileName","fileinfo","JSON","stringify","blob","Blob","type","URL","createObjectURL","href","link","document","createElement","download","body","appendChild","click","removeChild","sendingFile","folder","String","console","log","requestOptions","method","headers","fetch","then","res","ok","Error","statusText","text","catch","e","track","querySelector","timeInterval","pxPerSec","Math","ceil","this","WaveSurfer","create","barWidth","barRadius","barGap","cursorWidth","container","waveColor","backend","height","progressColor","responsive","hideScrollbar","cursorColor","plugins","MinimapPlugin","RegionsPlugin","dragSelection","slop","resize","TimelinePlugin","formatTimeCallback","seconds","Number","minutes","floor","secondsStr","round","toString","toFixed","primaryLableInterval","secondaryLabelInterval","primaryColor","secondaryColor","primaryFontColor","secondaryFontColor","CursorPlugin","showTime","opacity","customShowTimeStyle","padding","SpectroPlugin","load","gradient","random","on","enableDragSelection","stopPropagation","shiftKey","playLoop","play","showNote","el","textContent","form","forms","edit","style","elements","note","value","onsubmit","preventDefault","update","querySelectorAll","forEach","getAttribute","id","insertAdjacentHTML","onreset","dataset","remove","className","onClick","src","onLoadedMetadata","event","target","name","transition","margin","htmlFor","onChange","rows","width","alt","Component","axiosInstance","axios","baseURL","timeout","App","useState","setUrl","setSpectogram","setFiledata","loading","setLoading","useEffect","get","result","sound_url","spectogram_url","window","location","reload","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f1944187.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const WaveformContianer = styled.div`\r\n  display: flex;  \r\n  flex-direction: row;  \r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100px;  width: 100%;\r\n  background: transparent;\r\n`;\r\n\r\nexport const AudioContainer = styled.div`\r\n\r\n`\r\n\r\nexport const Wave = styled.div`\r\n  width: 100%;\r\n  height: 90px;\r\n`;\r\n\r\nexport const Timeline = styled.div`\r\n    width: 100%;\r\n    height: 10px\r\n    `\r\n\r\nexport const PlayButton = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 60px;\r\n  height: 60px;\r\n  background: #EFEFEF;\r\n  border-radius: 50%;\r\n  border: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  padding-bottom: 3px;\r\n  &:hover {\r\n    background: #DDD;\r\n  }\r\n`;\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport WaveSurfer from 'wavesurfer.js';\r\nimport RegionsPlugin from 'wavesurfer.js/dist/plugin/wavesurfer.regions';\r\nimport MinimapPlugin from 'wavesurfer.js/dist/plugin/wavesurfer.minimap';\r\nimport TimelinePlugin from 'wavesurfer.js/dist/plugin/wavesurfer.timeline';\r\nimport CursorPlugin from 'wavesurfer.js/dist/plugin/wavesurfer.cursor';\r\nimport SpectroPlugin from 'wavesurfer.js/dist/plugin/wavesurfer.spectrogram';\r\n\r\nimport { WaveformContianer, Wave, PlayButton, Timeline, AudioContainer } from './styles';\r\n\r\n\r\nimport { ReactTransliterate } from \"react-transliterate\";\r\nimport \"react-transliterate/dist/index.css\";\r\n\r\n\r\n\r\nclass AudioSpectrum extends Component {\r\n    static randomColor = (gradient = 0.5) =>\r\n        `\r\n    rgba(${Math.floor(Math.random() * 256)},${Math.floor(Math.random() * 256)},${Math.floor(\r\n            Math.random() * 256,\r\n        )}, ${gradient})\r\n\r\n    `\r\n    state = {\r\n        playing: false,\r\n        zoom: 0,\r\n        cursorTime: 0,\r\n        url: this.props.url,\r\n        spectogram: this.props.spectogram,\r\n        table: this.props.filedata.table,\r\n        index: this.props.filedata.index,\r\n        serial: this.props.filedata.serial,\r\n        regions: [],\r\n        responseMessage: 'Send to server',\r\n        start: 0.1,\r\n        end: 0.5,\r\n        label: '',\r\n        duration: 0,\r\n    }\r\n    componentDidMount() {\r\n\r\n        const track = document.querySelector('#track');\r\n\r\n        const formatTimeCallback = (seconds, pxPerSec) => {\r\n            seconds = Number(seconds)\r\n            var minutes = Math.floor(seconds / 60);\r\n            seconds = seconds % 60;\r\n\r\n            // fill up seconds with zeroes\r\n            var secondsStr = Math.round(seconds).toString();\r\n            if (pxPerSec >= 25 * 10) {\r\n                secondsStr = seconds.toFixed(2);\r\n            } else if (pxPerSec >= 25 * 1) {\r\n                secondsStr = seconds.toFixed(1);\r\n            }\r\n\r\n            if (minutes > 0) {\r\n                if (seconds < 10) {\r\n                    secondsStr = '0' + secondsStr;\r\n                }\r\n                return `${minutes}:${secondsStr}`;\r\n            }\r\n            return secondsStr;\r\n        }\r\n\r\n        const timeInterval = (pxPerSec) => {\r\n            var retval = 1;\r\n            if (pxPerSec >= 25 * 100) {\r\n                retval = 0.01;\r\n            } else if (pxPerSec >= 25 * 40) {\r\n                retval = 0.025;\r\n            } else if (pxPerSec >= 25 * 10) {\r\n                retval = 0.1;\r\n            } else if (pxPerSec >= 25 * 4) {\r\n                retval = 0.25;\r\n            } else if (pxPerSec >= 25) {\r\n                retval = 1;\r\n            } else if (pxPerSec * 5 >= 25) {\r\n                retval = 5;\r\n            } else if (pxPerSec * 15 >= 25) {\r\n                retval = 15;\r\n            } else {\r\n                retval = Math.ceil(0.5 / pxPerSec) * 60;\r\n            }\r\n            return retval;\r\n        }\r\n\r\n        const primaryLableInterval = (pxPerSec) => {\r\n            var retval = 1;\r\n            if (pxPerSec >= 25 * 100) {\r\n                retval = 10;\r\n            } else if (pxPerSec >= 25 * 40) {\r\n                retval = 4;\r\n            } else if (pxPerSec >= 25 * 10) {\r\n                retval = 10;\r\n            } else if (pxPerSec >= 25 * 4) {\r\n                retval = 4;\r\n            } else if (pxPerSec >= 25) {\r\n                retval = 1;\r\n            } else if (pxPerSec * 5 >= 25) {\r\n                retval = 5;\r\n            } else if (pxPerSec * 15 >= 25) {\r\n                retval = 15;\r\n            } else {\r\n                retval = Math.ceil(0.5 / pxPerSec) * 60;\r\n            }\r\n            return retval;\r\n        }\r\n\r\n        const secondaryLabelInterval = (pxPerSec) => {\r\n            // draw one every 10s as an example\r\n            return Math.floor(10 / timeInterval(pxPerSec));\r\n        }\r\n\r\n        this.waveform = WaveSurfer.create({\r\n            barWidth: 5,\r\n            barRadius: 3,\r\n            barGap: 3,\r\n            cursorWidth: 1,\r\n            container: '#waveform',\r\n            waveColor: '#D9DCFF',\r\n            backend: 'WebAudio',\r\n            height: 80,\r\n            progressColor: '#2D5BFF',\r\n            responsive: true,\r\n            hideScrollbar: false,\r\n            cursorColor: '#4353FF',\r\n            plugins: [\r\n                MinimapPlugin.create(),\r\n                RegionsPlugin.create({\r\n                    regions: this.state.regions,\r\n                    dragSelection: {\r\n                        slop: 0.1,\r\n                        resize: true\r\n                    }\r\n                }),\r\n                TimelinePlugin.create({\r\n                    container: '#timeline',\r\n                    formatTimeCallback: formatTimeCallback,\r\n                    timeInterval: timeInterval,\r\n                    primaryLableInterval: primaryLableInterval,\r\n                    secondaryLabelInterval: secondaryLabelInterval,\r\n                    primaryColor: 'blue',\r\n                    secondaryColor: 'red',\r\n                    primaryFontColor: 'blue',\r\n                    secondaryFontColor: 'red'\r\n                }),\r\n                CursorPlugin.create({\r\n                    showTime: true,\r\n                    opacity: 1,\r\n                    customShowTimeStyle: {\r\n                        'background-color': '#000',\r\n                        color: '#fff',\r\n                        padding: '2px',\r\n                        'font-size': '10px'\r\n                    }\r\n                }),\r\n                SpectroPlugin.create({\r\n                    container: \"#Spectograph\"\r\n                })\r\n            ]\r\n        })\r\n        //getting the element it and loading the url\r\n        this.waveform.load(track);\r\n\r\n        const randomColor =(gradient= 0.5) => (\r\n            `\r\n        rgba(${Math.floor(Math.random() * 256)},${Math.floor(Math.random() * 256)},${Math.floor(\r\n                Math.random() * 256,\r\n            )}, ${gradient})\r\n    \r\n        `\r\n    )\r\n    this.waveform.on('ready', function () {\r\n        this.waveform.enableDragSelection({\r\n            color: randomColor()\r\n        })\r\n    })\r\n\r\n        //remove the regions on double click\r\n\r\n        // this.waveform.on('region-in', function(region, e) {\r\n        //     region.data = \"this is the new data\"\r\n        //     console.log(region.data)\r\n        // })\r\n        // wavesurfer.on('region-click', editAnnotation);\r\n        // wavesurfer.on('region-updated', saveRegions);\r\n        // wavesurfer.on('region-removed', saveRegions);\r\n        // wavesurfer.on('region-in', showNote);\r\n\r\n        // wavesurfer.on('region-play', function(region) {\r\n        //     region.once('out', function() {\r\n        //         wavesurfer.play(region.start);\r\n        //         wavesurfer.pause();\r\n        //     });\r\n        // });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        // plays only the sound under the region\r\n        this.waveform.on('region-click', function (region, e) {\r\n            e.stopPropagation();\r\n            // Play on click, loop on shift click\r\n            e.shiftKey ? region.playLoop() : region.play();\r\n        });\r\n\r\n        this.waveform.on('region-mouseenter', showNote);\r\n        function showNote(region) {\r\n            if (!showNote.el) {\r\n                showNote.el = document.querySelector('#subtitle');\r\n            }\r\n            showNote.el.textContent = region.data || '–';\r\n        }\r\n\r\n        this.waveform.on('region-click', editAnnotation)\r\n        function editAnnotation(region) {\r\n            let form = document.forms.edit;\r\n            form.style.opacity = 1;\r\n            form.elements.note.value = region.data || '';\r\n            form.onsubmit = function (e) {\r\n                e.preventDefault();\r\n                region.update({\r\n                    data: form.elements.note.value\r\n                });\r\n                form.style.opacity = 0;\r\n                let regionElement = document.querySelectorAll('region')\r\n                regionElement.forEach(el => {\r\n                    if(el.getAttribute('data-id') === region.id) {\r\n                        let label = '<li class=\"region-label\">'+ region.data + '</li>'\r\n                        return el.insertAdjacentHTML('beforeend', label)\r\n                    } \r\n                })\r\n            };\r\n            form.onreset = function () {\r\n                form.style.opacity = 0;\r\n                form.dataset.region = null;\r\n            };\r\n            form.dataset.region = region.id;\r\n        }\r\n        this.waveform.on('region-dblclick', function (region, e) {\r\n            region.remove()\r\n        })\r\n\r\n        this.waveform.on('region-updated', function (region, e) {\r\n            // console.log(region.data,e)\r\n            // if (region.data === {} ) {\r\n            //     return \r\n            // } else {\r\n            //     const regionofInterest = document.querySelector('region')\r\n            //     console.log(regionofInterest.dataset.id)\r\n            //     if (regionofInterest.dataset.id === region.id) {\r\n            //         var node = document.createElement(\"li\");\r\n            //         node.textContent = region.data\r\n            //         regionofInterest.appendChild(node)\r\n            //     }\r\n\r\n            // }\r\n            \r\n            if(typeof(region.data) === 'string'){\r\n\r\n                // if (regionElement[0].getAttribute('data-id') === region.id) {\r\n\r\n                //         }  \r\n                //         console.log(region)\r\n            }\r\n            // if(region.data ) {\r\n            //     \r\n\r\n            // }\r\n            \r\n        })\r\n    }\r\n    handlePlayPause = () => {\r\n        this.setState({ playing: !this.state.playing })\r\n        this.waveform.playPause();\r\n    };\r\n\r\n    //adding regions to play\r\n    addRegion = () => {\r\n        this.waveform.addRegion({\r\n            start: this.state.start,\r\n            end: this.state.end,\r\n            data: this.state.label,\r\n            color: AudioSpectrum.randomColor(),\r\n        })\r\n    }\r\n\r\n    removeAll = () => {\r\n        this.waveform.clearRegions()\r\n    }\r\n\r\n    //ToDo url \r\n    downloadFile = async () => {\r\n        const regionsList = []\r\n        const regions = Object.values(this.waveform.regions.list)\r\n            .map(region => {\r\n                const json = {\r\n                    start: region.start,\r\n                    end: region.end,\r\n                    label: region.data\r\n                }\r\n                return regionsList.push(json)\r\n            })\r\n        const fileName = \"file\";\r\n        const fileinfo = {\r\n            duration: this.state.duration,\r\n            url: this.state.url,\r\n            regions: regionsList\r\n        }\r\n        const json = JSON.stringify(fileinfo)\r\n\r\n        const blob = new Blob([json], { type: 'application/json' });\r\n\r\n        const href = await URL.createObjectURL(blob);\r\n\r\n        const link = document.createElement('a');\r\n        link.href = href;\r\n        link.download = fileName + \".json\";\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n    }\r\n\r\n    sendingFile = () => {\r\n        //sending post request at http://xn--11by0j.com:8000/api/v1/response_srt_web/\r\n        this.setState({responseMessage : 'sending...'})\r\n        const folder = String(this.state.table) + \"/\" + String(this.state.index) + \"/\" + this.state.serial\r\n\r\n        const regionsList = []\r\n        const regions = Object.values(this.waveform.regions.list)\r\n            .map(region => {\r\n                const json = {\r\n                    start: region.start,\r\n                    end: region.end,\r\n                    label: region.data\r\n                }\r\n                return regionsList.push(json)\r\n            })\r\n        const data = {\r\n            folder: folder,\r\n            duration: this.state.duration,\r\n            regions: regionsList\r\n        }\r\n        console.log(JSON.stringify(data))\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n            },\r\n            body: JSON.stringify(\r\n                data\r\n            )\r\n        };\r\n        fetch('http://xn--11by0j.com:8000/api/v1/response_srt_web/', requestOptions)\r\n            .then(res => {\r\n                if(!res.ok) {\r\n                    throw Error(res.statusText);\r\n                } \r\n                this.setState({responseMessage: 'DONE'})\r\n                return res.text()\r\n\r\n            }).catch((e) => {\r\n                this.setState({responseMessage: 'ERROR'})\r\n                console.log(e)\r\n            })\r\n        \r\n    }\r\n\r\n    render() {\r\n        \r\n\r\n\r\n        return (\r\n            <>\r\n                <p id=\"subtitle\" className=\"\">&nbsp;</p>\r\n                <AudioContainer>\r\n                    <button onClick={this.removeAll}>\r\n                        Remove all\r\n                    </button>\r\n                    <button onClick={this.downloadFile}>download</button>\r\n                    <button onClick={this.sendingFile}>{this.state.responseMessage}</button>\r\n                    <div>{this.state.responseMessage === \"DONE\" ?<p>Please Click 'Load Next' Button for new audio</p>: null }</div>\r\n                    <WaveformContianer>\r\n                        <Wave id=\"waveform\" />\r\n                        <audio id=\"track\" src={this.state.url} onLoadedMetadata={event => { this.setState({ duration: event.target.duration }) }} />\r\n                    </WaveformContianer>\r\n\r\n                    {/* <div id=\"Spectograph\" /> */}\r\n                </AudioContainer>\r\n                <div className=\"labelForm\" >\r\n                <PlayButton onClick={this.handlePlayPause}>\r\n                    {\r\n                        !this.state.playing ? 'Play' : 'Pause'\r\n                    }\r\n                </PlayButton>\r\n                    <form name=\"edit\" style={{ opacity: 0, transition: 'opacity 300ms linear', margin: '10px 0' }}>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"note\">Note</label>\r\n                            <ReactTransliterate value={this.state.label} onChange={(e) => this.setState({ label: e.target.value })} id=\"note\" className=\"form-control\" rows=\"3\" name=\"note\" />\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-success btn-block\">Save</button>\r\n\r\n                    </form>\r\n                </div>\r\n                {/* <img src={Image} height=\"300px\" width=\"100%\" alt=\"spectrograph\" /> */}\r\n                <img src={this.state.spectogram} height=\"300px\" width=\"100%\" alt=\"newdata\" />\r\n\r\n                <Timeline id=\"timeline\" />\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n// AudioSpectrum.propTypes = {\r\n//     url : PropTypes.string,\r\n//     regions: PropTypes.arrayOf(\r\n//         PropTypes.shape({\r\n//           id: PropTypes.string.isRequired,\r\n//           start: PropTypes.string.isRequired,\r\n//           end: PropTypes.number.isRequired,\r\n//           color: PropTypes.string.isRequired\r\n//         }).isRequired\r\n//       ).isRequired\r\n\r\n// }\r\nexport default AudioSpectrum;","import axios from 'axios'\r\n\r\nconst baseURL = \"http://xn--11by0j.com:8000/api/v1/\"\r\nexport const axiosInstance = axios.create({\r\n    baseURL: baseURL,\r\n    timeout: 5000,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'accept': 'application/json'}\r\n})\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport AudioSpectrum from './AudioAnnotation/AudioSpectrum';\r\n\r\nimport './App.css'\r\nimport {axiosInstance} from './Api/axiosInstance'\r\n\r\n\r\n\r\nfunction App() {\r\n  const [url, setUrl] = useState('')\r\n  const [spectogram, setSpectogram] = useState('')\r\n  const [filedata, setFiledata] = useState({})\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    axiosInstance.get(\"get_data\")\r\n    .then(result => {\r\n      const data = result.data\r\n      setUrl(data.sound_url)\r\n      setSpectogram(data.spectogram_url)\r\n      setFiledata({\r\n        table: data.table,\r\n        index: data.index,\r\n        serial: data.serial\r\n      })\r\n      setLoading(false)\r\n    },)\r\n  },[])\r\n\r\n  const handleRefresh = () => {\r\n    window.location.reload()\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\"> \r\n    <button type=\"button\" onClick={handleRefresh}>Load next</button>\r\n    {!loading?\r\n    <AudioSpectrum url={url} spectogram={spectogram} filedata={filedata} />: null  \r\n  }\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}